# Copyright 2012-2015 Tail-f Systems AB
#
# See the file "LICENSE" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

# Process this file with autoconf to produce a configure script.
AC_INIT(Makefile)

# Default application installation dir. Override with --prefix
AC_PREFIX_DEFAULT(/usr/local/lux)

# Default config installation dir is $prefix/etc. Override with --sysconfdir

use_default_sysconfdir=false
if test "x$sysconfdir" == 'x${prefix}/etc'; then
  # $sysconfdir is not set
  use_default_sysconfdir=true
  if test "x$prefix" == "xNONE"; then
    # $prefix is not set
    sysconfdir="/usr/local/lux/priv"
  else
    sysconfdir="$prefix/priv"
  fi
fi

AC_SUBST(sysconfdir)
AC_SUBST(use_default_sysconfdir)

################################################################################
# C

AC_ARG_ENABLE(runpty,
AS_HELP_STRING([--enable-runpty],  [enable use of runpty shell wrapper])
AS_HELP_STRING([--disable-runpty], [disable use of runpty shell wrapper]))

if test "x$enable_runpty" != "xno"; then

  # AC_CANONICAL_SYSTEM
  AC_CONFIG_SRCDIR([c_src/runpty.c])
  # AC_CONFIG_HEADERS([config.h])

  # Checks for C programs.
  AC_PROG_CC
  AC_PROG_GCC_TRADITIONAL

  CFLAGS="$CFLAGS -Wall"
  AC_SUBST(CFLAGS)

  # AC_PROG_MAKE_SET
  # AC_PROG_INSTALL

  # Checks for libraries.

  # Checks for header files.
  AC_CHECK_HEADERS([fcntl.h stdlib.h string.h sys/ioctl.h sys/time.h unistd.h])

  # Checks for typedefs, structures, and compiler characteristics.
  AC_TYPE_PID_T

  # Checks for library functions.
  AC_FUNC_FORK
  AC_CHECK_FUNCS([dup2 select])

  C_SRC_TARGET=c_src
else

  C_SRC_TARGET=

fi

AC_SUBST(C_SRC_TARGET)

################################################################################
# Erlang

# AC_ERLANG_NEED_ERL is not available on old systems
AC_PATH_PROG(ERL, erl, no)
if test "x$ERL" == "xno"; then
  AC_MSG_ERROR([erl: command not found])
fi

# AC_ERLANG_NEED_ERLC is not available on old systems
AC_PATH_PROG(ERLC, erlc, no)
if test "x$ERLC" == "xno"; then
  AC_MSG_ERROR([erlc: command not found])
fi

################################################################################
# Doc
AC_PATH_PROG(MARKDOWN, markdown, no)
if test "x$MARKDOWN" == "xno"; then
  # Enforce a runtime error when doc is built
  MARKDOWN=markdown
fi
AC_SUBST(MARKDOWN)

################################################################################
# Output

AC_OUTPUT(include.mk)
AC_OUTPUT
